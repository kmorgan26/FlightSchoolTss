@page "/register"
@using System.Text.Json;
@using System.Text;
@inject HttpClient _httpClient
@inject NavigationManager _navigationManager

<div class="ma-6 d-flex justify-center">
    <MudChip Color="Color.Primary">
        <h3>Registration Form</h3>
    </MudChip>
</div>
<div class="ma-6 d-flex  justify-center">
    <MudCard Width="500px">
        <MudForm Model="registrationModel" @ref="form" Validation="registrationValidator.ValidateValue">
            <MudCardContent>
                <MudTextField @bind-Value="registrationModel.FirstName"
                              For="@(() => registrationModel.FirstName)"
                              Immediate="true"
                              Label="First Name" />
                <MudTextField @bind-Value="registrationModel.LastName"
                              For="@(() => registrationModel.LastName)"
                              Immediate="true"
                              Label="Last Name" InputType="InputType.Email" />
                <MudTextField @bind-Value="registrationModel.EmailAddress"
                              For="@(() => registrationModel.EmailAddress)"
                              Immediate="true"
                              Label="Email" />
                <MudTextField @bind-Value="registrationModel.Password"
                              For="@(() => registrationModel.Password)"
                              Immediate="true"
                              Label="Password" InputType="InputType.Password" />
                <MudTextField @bind-Value="registrationModel.ConfirmPassword"
                              For="@(() => registrationModel.ConfirmPassword)"
                              Immediate="true"
                              Label="Confirm Password" InputType="InputType.Password" />
                <MudCardActions>
                    <MudButton Variant="Variant.Filled" Color="Color.Primary" Class="ml-auto" OnClick="RegisterAsync">Register</MudButton>
                </MudCardActions>
            </MudCardContent>
        </MudForm>
    </MudCard>
</div>
@code {
    RegistrationVm registrationModel = new RegistrationVm();

    RegistrationValidationVm registrationValidator = new RegistrationValidationVm();

    MudForm? form;

    string APIErrorMessage = string.Empty;

    private async Task RegisterAsync()
    {
        await form!.Validate();

        if (form.IsValid)
        {
            // invoke register API call.
            var jsonPayload = JsonSerializer.Serialize(registrationModel);
            var requestContent = new StringContent(jsonPayload, Encoding.UTF8, "application/json");
            var response = await _httpClient.PostAsync("/api/register", requestContent);

            if (response.StatusCode == System.Net.HttpStatusCode.BadRequest)
            {
                var errors = await response.Content
                    .ReadFromJsonAsync<Dictionary<string, List<string>>>();
                
                if (errors.Count > 0)
                {
                    foreach (var item in errors)
                    {
                        foreach (var errorMessage in item.Value)
                        {
                            APIErrorMessage = $"{errorMessage} | ";
                        }
                    }
                }
            }
            else if (response.StatusCode == System.Net.HttpStatusCode.OK)
            {
                _navigationManager.NavigateTo("/confirm");
            }
            else
            {
                APIErrorMessage = "Failed To Register User Please Try After SomeTime";
            }
        }
    }
}