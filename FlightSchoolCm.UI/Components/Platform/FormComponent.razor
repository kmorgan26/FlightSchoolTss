
<MudGrid Style="align-items: center">
    <MudItem xs="12">
        <MudForm Model="@_dto" @ref="@MudForm" Validation="_validator.ValidateValue" ValidationDelay="0">

            <MudTextField @bind-Value="_dto.Name"
                          Variant="Variant.Outlined"
                          For="(() => _dto.Name)"
                          Label="Platform Name"
                          Class="my-6" />

            <MudSelect T="int" Label="Maintainer" @bind-bind-SelectedValues="@_dto">
                <MudSelectItem Value="0">SELECT ONE</MudSelectItem>
                @foreach(var item in MaintainerVms)
                {
                    <MudSelectItem Value="@item.Id">@item.Name</MudSelectItem>
                }
            </MudSelect>

            <MudCheckBox @bind-Checked="_dto.IsActive"
                         Label="Is Active?" />


        </MudForm>
    </MudItem>
    <MudItem xs="6">
        <MudButton Variant="Variant.Filled" Color="Color.Primary" OnClick="@(async () => await SubmitForm())">@ButtonText</MudButton>
    </MudItem>
</MudGrid>

@code {

    [Parameter]
    public EventCallback<MudForm> OnSubmitForm { get; set; }

    [Parameter]
    public PlatformDto _dto { get; set; } = new();

    [Parameter]
    public string ButtonText { get; set; } = "ADD";

    [Parameter]
    public MudForm? MudForm { get; set; } = new();

    [Parameter]
    public List<MaintainerVm> MaintainerVms { get; set; } = null!;

    PlatformDtoValidator _validator = new();

    private async Task SubmitForm()
    {
        await OnSubmitForm.InvokeAsync(MudForm);
    }
}