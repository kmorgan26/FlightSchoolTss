<FSForm OnSubmitForm="SubmitForm" TItem="PlatformDto" IsDisabled="@DisableChecker()">
    <FormControls>

        <MudGrid>
            <MudItem>

                <MudTextField @bind-Value="_dto.Name"
                              Variant="Variant.Outlined"
                              For="(() => _dto.Name)"
                              Label="Platform Name"
                              OnlyValidateIfDirty="true"
                              Class="my-6" />

            </MudItem>
            <MudItem>
                
                <MudSelect 
                    Class="mt-6" 
                    Variant="Variant.Outlined" 
                    For="@(() => _dto.MaintainerId)" 
                    T="int" Label="Maintainer" 
                    MultiSelection="false" 
                    @bind-Value="@_dto.MaintainerId">

                    <MudSelectItem Value="0">SELECT ONE</MudSelectItem>
                    @foreach (var item in MaintainerDtos)
                    {
                        <MudSelectItem Value="@item.Id">@item.Name</MudSelectItem>
                    }

                </MudSelect>

            </MudItem>
            <MudItem>

                <MudCheckBox @bind-Checked="_dto.IsActive" Label="Is Active?" Class="mt-7" />

            </MudItem>
        </MudGrid>


        <MudHidden @bind-Value="_dto.MaintainableId" />
        

    </FormControls>
</FSForm>

@code {

    [Parameter]
    public EventCallback<MudForm> OnSubmitForm { get; set; }

    [Parameter]
    public PlatformDto _dto { get; set; } = new();

    [Parameter]
    public string ButtonText { get; set; } = "ADD";

    [Parameter]
    public MudForm? MudForm { get; set; } = new();

    [Parameter]
    public List<MaintainerDto> MaintainerDtos { get; set; } = null!;

    private async Task SubmitForm()
    {
        if(MudForm!.IsValid)
            await OnSubmitForm.InvokeAsync(MudForm);
    }
    private bool DisableChecker()
    {
        return _dto.MaintainerId == 0;
    }
}