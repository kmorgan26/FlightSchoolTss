<FSForm OnSubmitForm="SubmitForm" TItem="PlatformDto">
    <FormControls>

        <MudGrid>
            <MudItem lg="4" md="6" sm="12" xs="12">

                <MudTextField @bind-Value="_dto.Name"
                              Variant="Variant.Outlined"
                              For="(() => _dto.Name)"
                              Label="Platform Name"
                              OnlyValidateIfDirty="true"
                              Class="my-6" />

            </MudItem>
            <MudItem lg="4" md="6" sm="12" xs="12">

                <MudSelect Class="mt-6" Variant="Variant.Outlined" T="int" Label="Maintainer" MultiSelection="false" @bind-Value="@_dto.MaintainerId">
                    <MudSelectItem Value="0">SELECT ONE</MudSelectItem>
                    @foreach (var item in MaintainerVms)
                    {
                        <MudSelectItem Value="@item.Id">@item.Name</MudSelectItem>
                    }
                </MudSelect>

            </MudItem>
            <MudItem lg="4" md="6" sm="12" xs="12">

                <MudCheckBox @bind-Checked="_dto.IsActive" Label="Is Active?" Class="mt-7" />

            </MudItem>
        </MudGrid>


        <MudHidden @bind-Value="_dto.MaintainableId" />


    </FormControls>
</FSForm>

@code {

    [Parameter]
    public EventCallback<MudForm> OnSubmitForm { get; set; }

    [Parameter]
    public PlatformDto _dto { get; set; } = new();

    [Parameter]
    public string ButtonText { get; set; } = "ADD";

    [Parameter]
    public MudForm? MudForm { get; set; } = new();

    [Parameter]
    public List<MaintainerVm> MaintainerVms { get; set; } = null!;

    private async Task SubmitForm()
    {
        await OnSubmitForm.InvokeAsync(MudForm);
    }
}