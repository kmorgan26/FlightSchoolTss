@typeparam TItem
@inherits MudForm

<MudPaper Class="d-flex flex-row align-center flex-grow-1 gap-4 px-4" Elevation="0">
    <MudItem>
        <MudForm Model="@DTOItem" @ref="@MudForm" @bind-IsValid="@_success">
            @FormControls!(DTOItem!)
        </MudForm>
    </MudItem>
    <MudItem>
        <MudButton Variant="@ButtonVariant" Disabled="@(!_success)" Color="@ButtonColor" OnClick="@(async () => await SubmitForm())">@ButtonText</MudButton>
    </MudItem>
</MudPaper>

@code {

    private bool _success;

    [CascadingParameter]
    public TItem? DTOItem { get; set; }

    [CascadingParameter]
    public string ButtonText { get; set; } = "ADD";

    [Parameter]
    public EventCallback<MudForm> OnSubmitForm { get; set; }

    [Parameter]
    public RenderFragment<TItem>? FormControls { get; set; }

    [Parameter]
    public Color ButtonColor { get; set; } = Color.Primary;

    [Parameter]
    public Variant ButtonVariant { get; set; } = Variant.Filled;

    private MudForm? MudForm { get; set; } = new();

    private async Task SubmitForm()
    {
        await OnSubmitForm.InvokeAsync(MudForm);
    }
}