@typeparam TItem
@inherits MudTable<TItem>

<style>
    .selected {
        background-color: #1E88E5 !important;
    }

        .selected > td {
            color: white !important;
        }

            .selected > td .mud-input {
                color: white !important;
            }
</style>

@if (FstssData is null)
{
    <p><em>Loading...</em></p>
}
else
{
    <MudTable @ref="_mudTable" 
        Items="@FstssData" 
        OnRowClick="RowClickEvent" T="TItem" 
        RowClassFunc="SelectedRowClassFunc" 
        Striped="true"
        Dense="@IsDense">
        <HeaderContent>
            @FstssHeaderTemplate
        </HeaderContent>
        <RowTemplate>
            @FstssRowTemplate(@context)
        </RowTemplate>
    </MudTable>
}

@code {

    [CascadingParameter]
    public IEnumerable<TItem> FstssData { get; set; } = null!;

    [Parameter]
    public EventCallback<TItem> FstssItem { get; set; }

    [Parameter]
    public RenderFragment<TItem> FstssRowTemplate { get; set; } = null!;

    [Parameter]
    public RenderFragment FstssHeaderTemplate { get; set; } = null!;

    [Parameter]
    public bool IsDense { get; set; } = true;

    private int selectedRowNumber = -1;

    private MudTable<TItem> _mudTable = null!;

    private void RowClickEvent(TableRowClickEventArgs<TItem> row)
    {
        FstssItem.InvokeAsync(row.Item);
    }

    private string SelectedRowClassFunc(TItem item, int rowNumber)
    {
        if (selectedRowNumber == rowNumber)
        {
            selectedRowNumber = -1;
            return string.Empty;
        }
        else if (_mudTable.SelectedItem != null && _mudTable.SelectedItem.Equals(item))
        {
            selectedRowNumber = rowNumber;
            return "selected";
        }
        else
        {
            return string.Empty;
        }
    }
}