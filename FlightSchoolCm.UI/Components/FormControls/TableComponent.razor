@typeparam TItem

<style>
    .selected {
        background-color: #1E88E5 !important;
    }

        .selected > td {
            color: white !important;
        }

            .selected > td .mud-input {
                color: white !important;
            }
</style>

<MudTable Items="@Items" @ref="_mudTable" Breakpoint="Breakpoint.Sm" 
        RowClassFunc="@SelectedRowClassFunc" OnRowClick="RowClickEvent" T="TItem">
    <HeaderContent>
        @HeaderContent
    </HeaderContent>
    <RowTemplate>
        @Items
    </RowTemplate>
</MudTable>

@code {

    private int selectedRowNumber = -1;

    private MudTable<TItem> _mudTable = null!;

    [Parameter]
    public RenderFragment HeaderContent { get; set; } = null!;

    [Parameter]
    public RenderFragment<TItem> RowTemplate { get; set; } = null!;

    [Parameter]
    public IEnumerable<TItem> Items { get; set; } = null!;

    [Parameter]
    public EventCallback<TItem> Item { get; set; }


    private void RowClickEvent(TableRowClickEventArgs<TItem> row)
    {
        Item.InvokeAsync(row.Item);
    }

    private string SelectedRowClassFunc(TItem item, int rowNumber)
    {
        if (selectedRowNumber == rowNumber)
        {
            selectedRowNumber = -1;
            return string.Empty;
        }
        else if (_mudTable.SelectedItem != null && _mudTable.SelectedItem.Equals(item))
        {
            selectedRowNumber = rowNumber;
            return "selected";
        }
        else
        {
            return string.Empty;
        }
    }
}