@inherits FluxorComponent
@inject IState<SimulatorState> State

<FSForm OnSubmitForm="SubmitForm" TItem="SimulatorDto">
    <FormControls>

        <MudGrid>

            <MudItem>

                <MudTextField @bind-Value="State.Value.SimulatorDto!.Name"
                              Variant="Variant.Outlined"
                              For="(() => State.Value.SimulatorDto!.Name)"
                              Label="Simulator Name"
                              OnlyValidateIfDirty="true"
                              Class="my-6" />

            </MudItem>

            <MudItem>

                <MudTextField @bind-Value="State.Value.SimulatorDto!.Alias"
                              Variant="Variant.Outlined"
                              For="(() => State.Value.SimulatorDto!.Alias)"
                              Label="Alias (Optional)"
                              Class="my-6" />

            </MudItem>

            <MudItem>

                <MudSelect Class="mt-6" Variant="Variant.Outlined" T="int" Label="Platform" MultiSelection="false" @bind-Value="@State.Value.SimulatorDto!.PlatformId">
                    <MudSelectItem Value="0">SELECT ONE</MudSelectItem>
                    @foreach (var item in PlatformDtos)
                    {
                        <MudSelectItem Value="@item.Id">@item.Name</MudSelectItem>
                    }
                </MudSelect>

            </MudItem>
            <MudItem>

                <MudCheckBox @bind-Checked="State.Value.SimulatorDto!.IsActive" Label="Is Active?" Class="mt-7" />

            </MudItem>

        </MudGrid>

        <MudHidden @bind-Value="State.Value.SimulatorDto!.PlatformId" />

    </FormControls>
</FSForm>

@code {

    [Parameter]
    public EventCallback<MudForm> OnSubmitForm { get; set; }

    [Parameter]
    public MudForm? MudForm { get; set; } = new();

    [Parameter]
    public List<PlatformDto> PlatformDtos { get; set; } = null!;

    private async Task SubmitForm()
    {
        await OnSubmitForm.InvokeAsync(MudForm);
    }
}