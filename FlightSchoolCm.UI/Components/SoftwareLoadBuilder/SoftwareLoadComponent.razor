@inject IGenericApiClient<PlatformDto> ApiClient
@inject IMapper Mapper

@if (isReady)
{
    <CascadingValue Value="@_selectedOption">
        <FSRadio TItem="RadioVm" RadioItems="@Items" Context="context" OnSelectedOptionChanged="ChangePlatform">
            <RadioButtons>
                <MudRadio Option="@context.Id" Dense>@context.Name</MudRadio>
        </RadioButtons>
    </FSRadio>
</CascadingValue>

}
@if (_selectedOption > 0)
{
    <SoftwareSystemList MaintainableId="_selectedOption" />
}

@code {
    private bool isReady;

    private int _selectedOption { get; set; }

    public IEnumerable<RadioVm>? Items { get; set; }

    private void ChangePlatform(int id)
    {
        _selectedOption = id;
    }
    private async Task RefreshPlatforms()
    {
        var platforms = await ApiClient.GetAllAsync();
        Items = Mapper.Map<IEnumerable<RadioVm>>(platforms);
    }
    protected override async Task OnInitializedAsync()
    {
        isReady = false;
        await RefreshPlatforms();
        isReady = true;
    }
}
