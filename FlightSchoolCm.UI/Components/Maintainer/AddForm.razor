@using FlightSchoolTss.DTOs.Maintainer;
@using FlightSchoolTss.Data.Validation;
@using FlightSchoolTss.Validators.Maintainer;
@using FluentValidation

@inject ISnackbar Snackbar
@inject IMaintainersApiClient MaintainersApiClient
@inject NavigationManager navigation

<MudGrid Style="align-items: center">
    <MudItem xs="6">
        <MudForm Model="@_dto" @ref="@_mudForm" Validation="_validator.ValidateValue" ValidationDelay="0">

            <MudTextField @bind-Value="_dto.Name"
                          Variant="Variant.Outlined"
                          For="(() => _dto.Name)"
                          Label="Maintainer Name"
                          Class="my-6" />
        </MudForm>
    </MudItem>
    <MudItem xs="2">
        <MudButton Variant="Variant.Filled" Color="Color.Primary" OnClick="@(async () => await CreateMaintainer())">Add</MudButton>
    </MudItem>
</MudGrid>



@code {
    private MudForm? _mudForm;

    private CreateMaintainerDto _dto { get; set; } = new();

    CreateMaintainerDtoValidator _validator = new();

    private async Task CreateMaintainer()
    {
        await _mudForm!.Validate();

        if (_mudForm.IsValid)
        {
            await MaintainersApiClient.CreateMaintainerAsync(_dto);
            Snackbar.Add($"The new Maintainer was Added!", MudBlazor.Severity.Success);
        }

        navigation.NavigateTo("/maintainer");
    }
}