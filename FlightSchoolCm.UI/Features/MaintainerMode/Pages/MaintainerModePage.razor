@page "/mode"

@inherits FluxorComponent

@inject IDispatcher Dispatcher
@inject IState<MaintainableModeState> MaintainerModeState
@inject IMapper Mapper
@inject IGenericApiClient<MaintainerDto> ApiClient

@if (MaintainerModeState.Value.MaintainerDtos is not null && MaintainerModeState.Value.MaintainerModeId > -1)
{
    <CascadingValue Value="@MaintainerModeState.Value.MaintainerModeId">
        <FSRadio TItem="MaintainerDto" RadioItems="@MaintainerModeState.Value.MaintainerDtos" Context="context" OnSelectedOptionChanged="ChangeMode">
            <RadioButtons>
                <MudRadio Option="@context.Id" Color="Color.Dark" Size="Size.Small">@context.Name</MudRadio>
            </RadioButtons>
        </FSRadio>
    </CascadingValue>
}

@code {

    private void ChangeMode(int mode)
    {
        var action = new MaintainerModeIdChange { MaintainerModeId = mode };
        Dispatcher.Dispatch(action);
    }
    private async Task RefreshMaintainers()
    {
        var action = new MaintainerDtosChange {  MaintainerDtos = await ApiClient.GetAllAsync() };
        Dispatcher.Dispatch(action);
    }
    protected override async Task OnInitializedAsync()
    {
        await RefreshMaintainers();
    }
}