@page "/mode"
@inherits FluxorComponent
@using FlightSchoolCm.UI.Components.FormControls
@using FlightSchoolCm.UI.Features.MaintainerMode.Store
@inject IDispatcher Dispatcher
@inject IState<MaintainerModeState> MaintainerModeState
@inject IMaintainersApiClient MaintainersApiClient

<h1>Maintainer Mode</h1>

<p>Current Mode: @MaintainerModeState.Value.MaintainerModeId</p>

@if (MaintainerVms is not null && SelectedOption > -1)
{
    <CascadingValue Value="@SelectedOption">
        <FstssRadio RadioItems="MaintainerVms" OnSelectedOptionChanged="ChangeMode"/>
    </CascadingValue>
}

@code {

    [Parameter]
    public List<MaintainerVm>? MaintainerVms { get; set; }

    public int SelectedOption { get; set; }

    private void ChangeMode(int mode)
    {
        SelectedOption = mode;
        var action = new MaintainerModeChangeAction { Value = mode };
        Dispatcher.Dispatch(action);
    }
    private async Task RefreshMaintainers()
    {
        MaintainerVms = await MaintainersApiClient.GetMaintainersAsync();
        SelectedOption = MaintainerModeState.Value.MaintainerModeId;
    }
    protected override async Task OnInitializedAsync()
    {
        await RefreshMaintainers();
    }

}
